// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreManagementSystem.Model.DBContext;

namespace StoreManagementSystem.Migrations
{
    [DbContext(typeof(InventoryDBContext))]
    [Migration("20200713084933_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoreManagementSystem.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnName("ProductName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SKU")
                        .HasColumnName("SKU")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 415, DateTimeKind.Local).AddTicks(3906),
                            Description = "HP Laptop",
                            IsActive = true,
                            Price = 30000m,
                            ProductName = "HP Laptop",
                            SKU = "12345"
                        },
                        new
                        {
                            ProductId = 2,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 415, DateTimeKind.Local).AddTicks(4675),
                            Description = "Dell Laptop",
                            IsActive = true,
                            Price = 20000m,
                            ProductName = "Dell Laptop",
                            SKU = "12345"
                        });
                });

            modelBuilder.Entity("StoreManagementSystem.Model.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Department")
                        .HasColumnName("Department")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("Firstname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("Lastname")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 412, DateTimeKind.Local).AddTicks(930),
                            Email = "John@gmail.com",
                            Firstname = "John",
                            Lastname = "Wick",
                            Phone = "1234567889"
                        },
                        new
                        {
                            StaffId = 2,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 413, DateTimeKind.Local).AddTicks(3372),
                            Email = "James@gmail.com",
                            Firstname = "James",
                            Lastname = "Smith",
                            Phone = "234353543545"
                        },
                        new
                        {
                            StaffId = 3,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 413, DateTimeKind.Local).AddTicks(3445),
                            Email = "Joey@gmail.com",
                            Firstname = "Joey",
                            Lastname = "west",
                            Phone = "5345345435435"
                        });
                });

            modelBuilder.Entity("StoreManagementSystem.Model.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StockId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnName("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnName("UpdatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnName("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("StockId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            StockId = 1,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 415, DateTimeKind.Local).AddTicks(7604),
                            ProductId = 1,
                            Quantity = 30m
                        },
                        new
                        {
                            StockId = 2,
                            CreatedBy = "test",
                            CreatedDate = new DateTime(2020, 7, 13, 14, 19, 32, 415, DateTimeKind.Local).AddTicks(8284),
                            ProductId = 2,
                            Quantity = 20m
                        });
                });

            modelBuilder.Entity("StoreManagementSystem.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsManager")
                        .HasColumnName("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            IsManager = true,
                            Password = "Password@123",
                            UserName = "manager@test.com"
                        },
                        new
                        {
                            UserId = 2,
                            IsManager = false,
                            Password = "Password@123",
                            UserName = "shopkeeper@test.com"
                        });
                });

            modelBuilder.Entity("StoreManagementSystem.Model.Stock", b =>
                {
                    b.HasOne("StoreManagementSystem.Model.Product", "product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Stocks_Product_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
